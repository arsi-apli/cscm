/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.arsi.nb.help.module.browser;

import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JScrollPane;
import org.openide.windows.TopComponent;
import sk.arsi.nb.help.module.actions.CreateHelpPanel;
import sk.arsi.nb.help.module.actions.Tools;
import sk.arsi.nb.help.module.client.NbDocClient;
import sk.arsi.nb.help.module.client.ServerType;
import sk.arsi.nb.help.module.client.SnippetTools;
import sk.arsi.nb.help.transfer.DescriptionRecord;
import sk.arsi.nb.help.transfer.HelpRecord;

/**
 *
 * @author arsi
 */
public class CodeViewer extends TopComponent {

    private JEditorPane editorPane;

    /**
     * Creates new form CodeViewer
     */
    public CodeViewer(DescriptionRecord description, String mimeType, ServerType serverType) {
        initComponents();
        setName(description.getDescription());
        JComponent[] editorComponents = Tools.createEditorEditor(mimeType);
        JScrollPane sp = (JScrollPane) editorComponents[0];
        editorPane = (JEditorPane) editorComponents[1];
        editorPane.setEditable(false);
        editorPane.getCaret().setVisible(true);
        codePanel.add(sp);
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                Object help = NbDocClient.getSingleHelpRecord(description.getId(), serverType);
                if (help instanceof HelpRecord) {
                    editorPane.setText(((HelpRecord) help).getCode());
                    author.setText(((HelpRecord) help).getUser());
                    keys.setText(SnippetTools.getKeys((HelpRecord) help));
                    classes.setText(SnippetTools.getClasses((HelpRecord) help));
                    mime.setText(mimeType);
                } else {
                    editorPane.setText("No response from server!!!");
                    author.setText("");
                    keys.setText("");
                    classes.setText("");
                    mime.setText(mimeType);
                }
            }
        };
        CreateHelpPanel.pool.execute(runnable);
    }

    @Override
    public int getPersistenceType() {
        return PERSISTENCE_NEVER; //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mime = new javax.swing.JLabel();
        keys = new javax.swing.JLabel();
        classes = new javax.swing.JLabel();
        author = new javax.swing.JLabel();
        codePanel = new javax.swing.JPanel();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(mime, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.mime.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(keys, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.keys.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(classes, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.classes.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(author, org.openide.util.NbBundle.getMessage(CodeViewer.class, "CodeViewer.author.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mime)
                    .addComponent(keys)
                    .addComponent(classes)
                    .addComponent(author))
                .addContainerGap(1172, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(keys))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(classes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(author))
                .addContainerGap())
        );

        codePanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(codePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(codePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel author;
    private javax.swing.JLabel classes;
    private javax.swing.JPanel codePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel keys;
    private javax.swing.JLabel mime;
    // End of variables declaration//GEN-END:variables
}
