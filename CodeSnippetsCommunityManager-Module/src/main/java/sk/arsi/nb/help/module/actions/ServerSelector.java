/*
 * (C) Copyright 2017 Arsi (http://www.arsi.sk/).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package sk.arsi.nb.help.module.actions;

import org.openide.util.NbPreferences;

/**
 *
 * @author arsi
 */
public class ServerSelector extends javax.swing.JPanel {

    public static final String GLOBAL = "GLOBAL";
    public static final String TEAM = "TEAM";
    public static final String LOCAL = "LOCAL";

    private final String prefix;

    //copy settings frem last selected

    public final boolean isGlobal() {
        return NbPreferences.forModule(ServerSelector.class).getBoolean(GLOBAL + prefix, true);
    }

    public final boolean isTeam() {
        return NbPreferences.forModule(ServerSelector.class).getBoolean(TEAM + prefix, true);
    }

    public final boolean isLocal() {
        return NbPreferences.forModule(ServerSelector.class).getBoolean(LOCAL + prefix, true);
    }

    public final boolean isGlobalCreate() {
        return global.isSelected();
    }

    public final boolean isTeamCreate() {
        return team.isSelected();
    }

    public final boolean isLocalCreate() {
        return local.isSelected();
    }


    /**
     * Creates new form ServerSelector
     */
    public ServerSelector(String prefix) {
        this.prefix = prefix;
        initComponents();
        global.setSelected(isGlobal());
        team.setSelected(isTeam());
        local.setSelected(isLocal());
        global.setContentAreaFilled(false);
        team.setContentAreaFilled(false);
        local.setContentAreaFilled(false);
    }

    public ServerSelector() {
        this.prefix = "_CREATE";
        initComponents();
        global.setSelected(isGlobal());
        team.setSelected(isTeam());
        local.setSelected(isLocal());
        global.setContentAreaFilled(false);
        team.setContentAreaFilled(false);
        local.setContentAreaFilled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        global = new javax.swing.JToggleButton();
        team = new javax.swing.JToggleButton();
        local = new javax.swing.JToggleButton();

        global.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/help_item_off.png"))); // NOI18N
        global.setSelected(true);
        global.setToolTipText("Enable/disable global server");
        global.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/help_item.png"))); // NOI18N
        global.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                globalActionPerformed(evt);
            }
        });

        team.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/help_item_team_off.png"))); // NOI18N
        team.setSelected(true);
        team.setToolTipText("Enable/disable team server");
        team.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/help_item_team.png"))); // NOI18N
        team.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamActionPerformed(evt);
            }
        });

        local.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/help_item_local_off.png"))); // NOI18N
        local.setSelected(true);
        local.setToolTipText("Enable/disable local server");
        local.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/help_item_local.png"))); // NOI18N
        local.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(global, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(team, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(local, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(global, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(team, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(local, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void globalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_globalActionPerformed
        // TODO add your handling code here:
        NbPreferences.forModule(ServerSelector.class).putBoolean(GLOBAL , global.isSelected());
        if (global.isSelected()) {
            NbPreferences.forModule(ServerSelector.class).remove(GLOBAL + prefix);
        } else {
            NbPreferences.forModule(ServerSelector.class).putBoolean(GLOBAL + prefix, false);
        }
    }//GEN-LAST:event_globalActionPerformed

    private void teamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamActionPerformed
        // TODO add your handling code here:
        NbPreferences.forModule(ServerSelector.class).putBoolean(GLOBAL , team.isSelected());
        if (team.isSelected()) {
            NbPreferences.forModule(ServerSelector.class).remove(TEAM + prefix);
        } else {
            NbPreferences.forModule(ServerSelector.class).putBoolean(TEAM + prefix, false);
        }
    }//GEN-LAST:event_teamActionPerformed

    private void localActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localActionPerformed
        // TODO add your handling code here:
        NbPreferences.forModule(ServerSelector.class).putBoolean(GLOBAL , local.isSelected());
        if (local.isSelected()) {
            NbPreferences.forModule(ServerSelector.class).remove(LOCAL + prefix);
        } else {
            NbPreferences.forModule(ServerSelector.class).putBoolean(LOCAL + prefix, false);
        }
    }//GEN-LAST:event_localActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton global;
    private javax.swing.JToggleButton local;
    private javax.swing.JToggleButton team;
    // End of variables declaration//GEN-END:variables
}
