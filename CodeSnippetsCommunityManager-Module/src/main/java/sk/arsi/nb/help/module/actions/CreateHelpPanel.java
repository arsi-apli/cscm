/*
 * (C) Copyright 2017 Arsi (http://www.arsi.sk/).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package sk.arsi.nb.help.module.actions;

import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;
import javax.swing.JComponent;
import javax.swing.JEditorPane;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import sk.arsi.nb.help.transfer.CreateHelpRecord;

/**
 *
 * @author arsi
 */
public class CreateHelpPanel extends javax.swing.JPanel {

    private JEditorPane editorPane;
    private final String mimeTypeType;

    /**
     * Creates new form CreateHelpPanel
     */
    public CreateHelpPanel(final String code, final String mimeType) {
        initComponents();
        this.mimeTypeType = mimeType;
        duplicateCode.setVisible(false);
        duplicateDescription.setVisible(false);
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                JComponent[] editorComponents = Tools.createSingleLineEditor(mimeType);
                JScrollPane sp = (JScrollPane) editorComponents[0];
                editorPane = (JEditorPane) editorComponents[1];
                jPanel1.add(sp);
                editorPane.setText(code);
                CreateHelpPanel.this.mimeType.setText(mimeTypeType);
                description.setText("");
                editorPane.setFocusable(true);
                editorPane.requestFocus();
            }
        };
        SwingUtilities.invokeLater(runnable);
    }

    public boolean isSendToGlobal() {
        return serverSelector1.isGlobal();
    }

    public boolean isSendToTeam() {
        return serverSelector1.isTeam();
    }

    public boolean isSendToLocal() {
        return serverSelector1.isLocal();
    }

    public CreateHelpRecord getRecord() {
        CreateHelpRecord record = new CreateHelpRecord();
        //    record.setUser(user.getText());
        record.setCode(editorPane.getText());
        List<String> keysList = new ArrayList<>();
        List<String> classList = new ArrayList<>();
        StringTokenizer tok = new StringTokenizer(keys.getText(), ";", false);
        while (tok.hasMoreElements()) {
            keysList.add(tok.nextToken());
        }
        tok = new StringTokenizer(classes.getText(), ";", false);
        while (tok.hasMoreElements()) {
            classList.add(tok.nextToken());
        }
        record.setClasses(classList.toArray(new String[classList.size()]));
        record.setKeys(keysList.toArray(new String[keysList.size()]));
        record.setMimeType(mimeTypeType);
        record.setDescription(description.getText());
        return record;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        keys = new javax.swing.JTextField();
        classes = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        description = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        serverSelector1 = new sk.arsi.nb.help.module.actions.ServerSelector();
        jLabel5 = new javax.swing.JLabel();
        mimeType = new javax.swing.JLabel();
        duplicateCode = new javax.swing.JButton();
        duplicateDescription = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.jLabel2.text")); // NOI18N

        keys.setText(org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.keys.text")); // NOI18N

        classes.setText(org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.classes.text")); // NOI18N

        jPanel1.setLayout(new java.awt.CardLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.jLabel3.text")); // NOI18N

        description.setText(org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.description.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(mimeType, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.mimeType.text")); // NOI18N

        duplicateCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/alert.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(duplicateCode, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.duplicateCode.text")); // NOI18N

        duplicateDescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/arsi/nb/help/module/alert.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(duplicateDescription, org.openide.util.NbBundle.getMessage(CreateHelpPanel.class, "CreateHelpPanel.duplicateDescription.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classes, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addComponent(keys)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serverSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mimeType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duplicateCode)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(description)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(duplicateDescription)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(keys, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(classes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duplicateDescription))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(serverSelector1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(mimeType)
                    .addComponent(duplicateCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField classes;
    private javax.swing.JTextField description;
    private javax.swing.JButton duplicateCode;
    private javax.swing.JButton duplicateDescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField keys;
    private javax.swing.JLabel mimeType;
    private sk.arsi.nb.help.module.actions.ServerSelector serverSelector1;
    // End of variables declaration//GEN-END:variables
}
