/*
 * (C) Copyright 2017 Arsi (http://www.arsi.sk/).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package sk.arsi.nb.help.module.client;

import java.io.File;
import java.util.prefs.BackingStoreException;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.util.Exceptions;
import org.openide.util.NbPreferences;
import sk.arsi.nb.help.module.actions.SearchSelector;
import sk.arsi.nb.help.module.actions.ServerSelector;
import sk.arsi.nb.help.transfer.AccountTestResult;
import sk.arsi.nb.help.transfer.RegeneratePassword;
import sk.arsi.nb.help.transfer.RegisterUser;
import sk.arsi.nb.help.transfer.Status;
import sk.arsi.nb.help.transfer.TestAccount;

public final class CommunitydocPanel extends javax.swing.JPanel {

    private final CommunitydocOptionsPanelController controller;

    public static final String SECOND_PRESS = "SECOND_PRESS";

    CommunitydocPanel(CommunitydocOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
        password.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.PASSWORD_HASH, new String(password.getPassword()));
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.PASSWORD_HASH, new String(password.getPassword()));
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.PASSWORD_HASH, new String(password.getPassword()));
            }
        });
        teamPassword.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.TEAM_PASSWORD_HASH, new String(teamPassword.getPassword()));
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.TEAM_PASSWORD_HASH, new String(teamPassword.getPassword()));
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.TEAM_PASSWORD_HASH, new String(teamPassword.getPassword()));
            }
        });
    }

    public static String getSysUserName() {
        return System.getProperty("user.name"); // NOI18N
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        port = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        singUp = new javax.swing.JButton();
        resendPassword = new javax.swing.JButton();
        activatePassword = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        teamAddress = new javax.swing.JTextField();
        teamPort = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        teamEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        teamPassword = new javax.swing.JPasswordField();
        teamSingUp = new javax.swing.JButton();
        teamResendPassword = new javax.swing.JButton();
        teamActivatePassword = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        first = new javax.swing.JRadioButton();
        second = new javax.swing.JRadioButton();
        clearLocalCache = new javax.swing.JButton();
        exportLocalDb = new javax.swing.JButton();
        importLocalDb = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        maxDescriptions = new javax.swing.JSpinner();
        maxCode = new javax.swing.JSpinner();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jPanel1.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel1.text")); // NOI18N

        address.setText(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.address.text")); // NOI18N
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        port.setModel(new javax.swing.SpinnerNumberModel(3232, 0, 65535, 1));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel3.text")); // NOI18N

        email.setText(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.email.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel7.text")); // NOI18N

        password.setText(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.password.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(singUp, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.singUp.text")); // NOI18N
        singUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singUpActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(resendPassword, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.resendPassword.text")); // NOI18N
        resendPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resendPasswordActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(activatePassword, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.activatePassword.text")); // NOI18N
        activatePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activatePasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(address)
                            .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(password))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(singUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resendPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(activatePassword)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singUp)
                    .addComponent(resendPassword)
                    .addComponent(activatePassword))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jPanel2.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel4.text")); // NOI18N

        teamAddress.setText(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.teamAddress.text")); // NOI18N

        teamPort.setModel(new javax.swing.SpinnerNumberModel(3232, 0, 65535, 1));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel6.text")); // NOI18N

        teamEmail.setText(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.teamEmail.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel8.text")); // NOI18N

        teamPassword.setText(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.teamPassword.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(teamSingUp, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.teamSingUp.text")); // NOI18N
        teamSingUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamSingUpActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(teamResendPassword, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.teamResendPassword.text")); // NOI18N
        teamResendPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamResendPasswordActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(teamActivatePassword, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.teamActivatePassword.text")); // NOI18N
        teamActivatePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamActivatePasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(teamAddress)
                            .addComponent(teamPort, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teamEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamPassword))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(teamSingUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamResendPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamActivatePassword)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(teamAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(teamPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(teamEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(teamPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teamSingUp)
                    .addComponent(teamResendPassword)
                    .addComponent(teamActivatePassword))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jPanel3.border.title"))); // NOI18N

        buttonGroup1.add(first);
        first.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(first, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.first.text")); // NOI18N

        buttonGroup1.add(second);
        org.openide.awt.Mnemonics.setLocalizedText(second, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.second.text")); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(first)
                    .addComponent(second))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(first)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(second)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(clearLocalCache, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.clearLocalCache.text")); // NOI18N
        clearLocalCache.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLocalCacheActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(exportLocalDb, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.exportLocalDb.text")); // NOI18N
        exportLocalDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportLocalDbActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(importLocalDb, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.importLocalDb.text")); // NOI18N
        importLocalDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importLocalDbActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jPanel4.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(CommunitydocPanel.class, "CommunitydocPanel.jLabel10.text")); // NOI18N

        maxDescriptions.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        maxCode.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(maxDescriptions, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(maxCode))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(maxDescriptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(maxCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clearLocalCache)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exportLocalDb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(importLocalDb))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel3, jPanel4});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearLocalCache)
                    .addComponent(exportLocalDb)
                    .addComponent(importLocalDb))
                .addGap(0, 0, 0))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel3, jPanel4});

    }// </editor-fold>//GEN-END:initComponents

    private void clearLocalCacheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLocalCacheActionPerformed
        try {
            NbPreferences.forModule(ServerSelector.class).clear();
            NbPreferences.forModule(SearchSelector.class).clear();
        } catch (BackingStoreException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_clearLocalCacheActionPerformed

    private void exportLocalDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportLocalDbActionPerformed
        // TODO add your handling code here:
        FileChooserBuilder builder = new FileChooserBuilder(CommunitydocPanel.class);
        builder.setFilesOnly(true);
        builder.setFileFilter(new FileNameExtensionFilter("zip", "zip"));
        builder.setTitle("Local database export");
        File file = builder.showSaveDialog();
        if(file!=null){
            String absolutePath = file.getAbsolutePath();
            if (!absolutePath.endsWith(".zip")) {
                absolutePath += ".zip";
            }
            NbDocClient.backup(absolutePath);
        }
    }//GEN-LAST:event_exportLocalDbActionPerformed

    private void activatePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activatePasswordActionPerformed
        testAccount(address.getText(), (int) port.getValue(), email, NbDocClient.PASSWORD_HASH);

    }//GEN-LAST:event_activatePasswordActionPerformed

    private void testAccount(String server, int port, JTextField field, String key) {
        // TODO add your handling code here:
        AccountTestResult testAccount = NbDocClient.testAccount(new TestAccount(field.getText(), NbPreferences.forModule(CommunitydocPanel.class).get(key, "")), server, port);
        if (testAccount == null) {
            NotifyDescriptor nd = new NotifyDescriptor.Message("Unable to connect to server", NotifyDescriptor.WARNING_MESSAGE);
            DialogDisplayer.getDefault().notifyLater(nd);
        } else if (testAccount.isOk()) {
            NotifyDescriptor nd = new NotifyDescriptor.Message("Server connection OK", NotifyDescriptor.INFORMATION_MESSAGE);
            DialogDisplayer.getDefault().notifyLater(nd);
        } else {
            NotifyDescriptor nd = new NotifyDescriptor.Message("Bad password or mail", NotifyDescriptor.WARNING_MESSAGE);
            DialogDisplayer.getDefault().notifyLater(nd);
        }
    }

    private void singUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singUpActionPerformed
        singIn(address.getText(), (int) port.getValue(),email,NbDocClient.EMAIL);

    }//GEN-LAST:event_singUpActionPerformed

    private void teamSingUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamSingUpActionPerformed
        singIn(teamAddress.getText(), (int) teamPort.getValue(),teamEmail,NbDocClient.TEAM_EMAIL);
    }//GEN-LAST:event_teamSingUpActionPerformed

    private void singIn(String server, int port,JTextField field,String key) {
        // TODO add your handling code here:
        SingUp panel = new SingUp();
        DialogDescriptor dd = new DialogDescriptor(panel, "Sing up");
        Object notify = DialogDisplayer.getDefault().notify(dd);
        if (notify.equals(NotifyDescriptor.OK_OPTION)) {
            RegisterUser record = panel.getRecord();
            Status status = NbDocClient.registerUser(record, server, port);
            if (status == null) {
                NotifyDescriptor nd = new NotifyDescriptor.Message("Unable to connect server", NotifyDescriptor.WARNING_MESSAGE);
                DialogDisplayer.getDefault().notifyLater(nd);
            } else if (status.isOk()) {
                NotifyDescriptor nd = new NotifyDescriptor.Message("Please wait while you receive a mail with the password", NotifyDescriptor.INFORMATION_MESSAGE);
                DialogDisplayer.getDefault().notifyLater(nd);
                field.setText(record.getEmail());
                NbPreferences.forModule(CommunitydocPanel.class).put(key, record.getEmail());
            } else {
                NotifyDescriptor nd = new NotifyDescriptor.Message("Error create user", NotifyDescriptor.WARNING_MESSAGE);
                DialogDisplayer.getDefault().notifyLater(nd);
            }
        }
    }

    private void resendPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resendPasswordActionPerformed
        // TODO add your handling code here:
        restorePassword(email, address.getText(), (int) port.getValue());
    }//GEN-LAST:event_resendPasswordActionPerformed

    private void teamResendPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamResendPasswordActionPerformed
        restorePassword(teamEmail, teamAddress.getText(), (int) teamPort.getValue());
    }//GEN-LAST:event_teamResendPasswordActionPerformed

    private void restorePassword(JTextField field, String server, int port) {
        // TODO add your handling code here:
        NbDocClient.regeneratePassword(new RegeneratePassword(field.getText()), server, port);
        NotifyDescriptor nd = new NotifyDescriptor.Message("Please wait while you receive a mail with the password", NotifyDescriptor.INFORMATION_MESSAGE);
        DialogDisplayer.getDefault().notifyLater(nd);
    }

    private void teamActivatePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamActivatePasswordActionPerformed
        testAccount(teamAddress.getText(), (int) teamPort.getValue(), teamEmail, NbDocClient.TEAM_PASSWORD_HASH);
    }//GEN-LAST:event_teamActivatePasswordActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void importLocalDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importLocalDbActionPerformed
        // TODO add your handling code here:
        FileChooserBuilder builder = new FileChooserBuilder(CommunitydocPanel.class);
        builder.setFilesOnly(true);
        builder.setFileFilter(new FileNameExtensionFilter("zip", "zip"));
        builder.setTitle("Local database import");
        File file = builder.showOpenDialog();
        if(file!=null){
            String absolutePath = file.getAbsolutePath();
            if (!absolutePath.endsWith(".zip")) {
                absolutePath += ".zip";
            }
            NbDocClient.restore(absolutePath);
        }
    }//GEN-LAST:event_importLocalDbActionPerformed

    void load() {
        address.setText(NbPreferences.forModule(CommunitydocPanel.class).get(NbDocClient.SERVER, "server.arsi.sk"));
        port.setValue(NbPreferences.forModule(CommunitydocPanel.class).getInt(NbDocClient.PORT, 3232));
        email.setText(NbPreferences.forModule(CommunitydocPanel.class).get(NbDocClient.EMAIL, ""));

        teamAddress.setText(NbPreferences.forModule(CommunitydocPanel.class).get(NbDocClient.TEAM_SERVER, ""));
        teamPort.setValue(NbPreferences.forModule(CommunitydocPanel.class).getInt(NbDocClient.TEAM_PORT, 3232));
        teamEmail.setText(NbPreferences.forModule(CommunitydocPanel.class).get(NbDocClient.TEAM_EMAIL, ""));
        boolean secondPr = NbPreferences.forModule(CommunitydocPanel.class).getBoolean(SECOND_PRESS, true);

        maxCode.setValue(NbPreferences.forModule(CommunitydocPanel.class).getInt(NbDocClient.MAX_CODE_RESULTS, 25));
        maxDescriptions.setValue(NbPreferences.forModule(CommunitydocPanel.class).getInt(NbDocClient.MAX_DESCRIPTION_RESULTS, 25));

        if (secondPr) {
            second.setSelected(true);
        } else {
            first.setSelected(true);
        }
    }

    void store() {
        NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.SERVER, address.getText());
        NbPreferences.forModule(CommunitydocPanel.class).putInt(NbDocClient.PORT, (Integer) port.getValue());
        NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.EMAIL, email.getText());

        NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.TEAM_SERVER, teamAddress.getText());
        NbPreferences.forModule(CommunitydocPanel.class).putInt(NbDocClient.TEAM_PORT, (Integer) teamPort.getValue());
        NbPreferences.forModule(CommunitydocPanel.class).put(NbDocClient.TEAM_EMAIL, teamEmail.getText());
        NbPreferences.forModule(CommunitydocPanel.class).putBoolean(SECOND_PRESS, second.isSelected());

        NbPreferences.forModule(CommunitydocPanel.class).putInt(NbDocClient.MAX_CODE_RESULTS, (Integer) maxCode.getValue());
        NbPreferences.forModule(CommunitydocPanel.class).putInt(NbDocClient.MAX_DESCRIPTION_RESULTS, (Integer) maxDescriptions.getValue());

    }

    public static String createHash(String password) {
        return password;
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activatePassword;
    private javax.swing.JTextField address;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearLocalCache;
    private javax.swing.JTextField email;
    private javax.swing.JButton exportLocalDb;
    private javax.swing.JRadioButton first;
    private javax.swing.JButton importLocalDb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner maxCode;
    private javax.swing.JSpinner maxDescriptions;
    private javax.swing.JPasswordField password;
    private javax.swing.JSpinner port;
    private javax.swing.JButton resendPassword;
    private javax.swing.JRadioButton second;
    private javax.swing.JButton singUp;
    private javax.swing.JButton teamActivatePassword;
    private javax.swing.JTextField teamAddress;
    private javax.swing.JTextField teamEmail;
    private javax.swing.JPasswordField teamPassword;
    private javax.swing.JSpinner teamPort;
    private javax.swing.JButton teamResendPassword;
    private javax.swing.JButton teamSingUp;
    // End of variables declaration//GEN-END:variables
}
